{"version":3,"file":"static/js/71.696d4ab2.chunk.js","mappings":"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","sources":["validations/contactFormSchema.ts","utils/regex.ts","components/MainView/SectionsComponents/Contact/ContactForm.tsx","services/formService.ts","lib/base-url.ts","components/MainView/Sections/ContactSection.tsx"],"sourcesContent":["import * as yup from 'yup'\nimport { LATIN_CHARACTERS_REGEX } from '../utils/regex';\n\nexport const contactFormSchemaShape = {\n    name: yup\n        .string()\n        .required('Your name is required')\n        .matches(LATIN_CHARACTERS_REGEX, 'Only characters from the latin alphabet are allowed')\n        .min(2, \"First Name should be at least 2 characters long\")\n        .max(20, \"First Name should be at most 20 characters long\"),\n    email: yup\n        .string()\n        .required('Your email address is required')\n        .email('Email address should be in valid format'),\n    subject: yup\n        .string()\n        .required('Subject is required')\n        .min(2, \"Subject should be at least 2 characters long\")\n        .max(40, \"Subject should be at most 40 characters long\"),\n    message: yup\n        .string()\n        .required('Your message is required')\n        .min(10, \"Message should be at least 10 characters long\")\n}\n\nconst contactFormSchema = yup.object().shape(contactFormSchemaShape)\n\nexport default contactFormSchema;","export const LATIN_CHARACTERS_REGEX = /[a-zA-z]/i\n","import { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport IFormData from '../../../../model/FormData';\nimport contactFormSchema from '../../../../validations/contactFormSchema';\nimport * as formService from '../../../../services/formService'\nimport styled from '@mui/material/styles/styled';\n\nimport Box from \"@mui/material/Box\"\nimport TextField from '@mui/material/TextField'\nimport Stack from '@mui/material/Stack'\nimport Button from '@mui/material/Button'\n\nimport SendIcon from '@mui/icons-material/Send';\nimport PersonIcon from '@mui/icons-material/Person';\nimport MailIcon from '@mui/icons-material/Mail';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { useState } from 'react';\nimport Typography from '@mui/material/Typography';\n\n\nconst StyledTextField = styled(TextField)`\n\tinput, textarea, label.Mui-error, label.Mui-focused ,label.Mui-error span {\n\t\tcolor: ${(({theme}) => theme.palette.text.secondary)};\n\t}\n\n\tp.Mui-error {\n\t\tcolor: ${(({theme}) => theme.palette.text.muted.light)};\n\t}\n`\ninterface Props {\n\tformSubmitSuccessHandler: (bool: boolean) => void\n}\n\nfunction ContactForm({formSubmitSuccessHandler}:Props ) {\n\tconst [errorDuringProcessing, setErrorDuringProcessing ] = useState<boolean>(false)\n\tconst { register, handleSubmit, formState: { errors, isDirty, isValid } } = useForm<IFormData>({\n\t\tmode: 'onBlur',\n\t\tresolver: yupResolver(contactFormSchema),\n\t\tdefaultValues: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tsubject: '',\n\t\t\tmessage: ''\n\t\t}\n\t});\n\n\tconst onFormSubmit = async (data: IFormData, e: React.BaseSyntheticEvent<object, any, any> | undefined) => {\n\t\te?.preventDefault()\n\n\t\tconst {name, email, subject, message } = data;\n\n\t\ttry {\n\t\t\tlet formSubmissionResponse = await formService.submit({name, email, subject, message})\n\t\t\tlet formSubmissionData = await formSubmissionResponse.json();\n\n\t\t\tif(formSubmissionData.success) {\n\t\t\t\tformSubmitSuccessHandler(true)\n\t\t\t\tsetErrorDuringProcessing(false)\n\t\t\t} else {\n\t\t\t\tsetErrorDuringProcessing(true)\n\t\t\t}\n\t\t} catch(err: any) {\n\t\t\tsetErrorDuringProcessing(true)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box>\n\t\t\t<form onSubmit={handleSubmit(onFormSubmit)}>\n\t\t\t\t<Stack direction='column' spacing={3}>\n\t\t\t\t\t<Stack direction='row' justifyContent='space-between' alignItems='center'>\n\t\t\t\t\t\t<PersonIcon fontSize='large' sx={{ color: 'custom.grey.darker', marginRight: '15px', marginTop: '10px' }} />\n\t\t\t\t\t\t<StyledTextField\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t{...register('name')}\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tlabel=\"Your name\"\n\t\t\t\t\t\t\terror={errors.name ? true : false}\n\t\t\t\t\t\t\thelperText={errors.name ? errors.name.message : ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\n\t\t\t\t\t<Stack direction='row' justifyContent='space-between' alignItems='center'>\n\t\t\t\t\t\t<MailIcon fontSize='large' sx={{ color: 'custom.grey.darker', marginRight: '15px', marginTop: '10px' }} />\n\t\t\t\t\t\t<StyledTextField\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t{...register('email')}\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tlabel=\"Your email address\"\n\t\t\t\t\t\t\terror={errors.email ? true : false}\n\t\t\t\t\t\t\thelperText={errors.email ? errors.email.message : ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\n\t\t\t\t\t<Stack direction='row' justifyContent='space-between' alignItems='center'>\n\t\t\t\t\t\t<LocalOfferIcon fontSize='large' sx={{ color: 'custom.grey.darker', marginRight: '15px', marginTop: '10px' }} />\n\t\t\t\t\t\t<StyledTextField\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t{...register('subject')}\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tlabel=\"Subject\"\n\t\t\t\t\t\t\terror={errors.subject ? true : false}\n\t\t\t\t\t\t\thelperText={errors.subject ? errors.subject.message : ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\n\t\t\t\t\t<Stack direction='row' justifyContent='space-between' alignItems='start'>\n\t\t\t\t\t\t<CreateIcon fontSize='large' sx={{ color: 'custom.grey.darker', marginRight: '15px', marginTop: '12px' }} />\n\t\t\t\t\t\t<StyledTextField\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={6}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t{...register('message')}\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tlabel=\"Your message\"\n\t\t\t\t\t\t\terror={errors.message ? true : false}\n\t\t\t\t\t\t\thelperText={errors.message ? errors.message.message : ''}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\n\t\t\t\t\t{ errorDuringProcessing && <Typography variant='body1' component='p' color='error.light' textAlign='center' style={{backgroundColor: 'rgba(0, 0, 0, 0.5)', borderRadius: '20px'}}>An error occurred while attempting to process your message.</Typography>}\n\n\t\t\t\t\t<Stack direction='row' justifyContent='center'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\tsx={{ backgroundColor: 'custom.blue.main', boxShadow: 7 }}\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tendIcon={<SendIcon />}\n\t\t\t\t\t\t\tdisabled={!(isDirty && isValid)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</form>\n\t\t</Box>\n\t)\n}\n\nexport default ContactForm","import IFormData from \"../model/FormData\"\r\n\r\nimport { baseUrl } from \"../lib/base-url\"\r\n\r\nexport const submit = (formData: IFormData) => fetch(`${baseUrl}/form`, {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(formData)\r\n})","export const baseUrl = 'http://localhost:3030/api'\r\n// export const baseUrl = 'http://www.arielbehar.com/api'","import { useEffect, useState } from 'react'\n\nimport styled from '@mui/material/styles/styled'\n\nimport ContactForm from '../SectionsComponents/Contact/ContactForm'\n\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Container from '@mui/material/Container'\nimport Typography from '@mui/material/Typography'\nimport Stack from '@mui/material/Stack'\nimport Link from '@mui/material/Link'\n\nconst StyledSectionBox = styled(Box)`\n    background-image: url('https://arielbehar-portfolio.s3.eu-central-1.amazonaws.com/backgrounds/phone-blurred.jpg');\n    background-attachment: fixed; \n    background-size: cover;\n    background-position: right center;\n`\n\nconst StyledDarkStack = styled(Stack)`\n    position: relative;\n    background: rgba(0, 0, 0, 0.5);\n    border-radius: 20px;\n`\n\nconst StyledLogoImg = styled('img')`\n    position: absolute;\n\n    top: -10px;\n    left: -10px;\n    height: 50px;\n    width: 50px;\n\n    @media (min-width: 600px){\n        top: -20px;\n        left: -20px;\n        height: 75px;\n        width: 75px;\n    }\n`\n\ninterface Props {\n    loadSectionHandler: (sectionNum: number) => void\n}\n\nfunction ContactSection({ loadSectionHandler }: Props) {\n    const [formSubmitSuccess, setFormSubmitSuccess] = useState<boolean>(false)\n\n    useEffect(() => {\n        loadSectionHandler(9)\n    }, [loadSectionHandler])\n\n    const formSubmitSuccessHandler = (bool: boolean) => {\n        setFormSubmitSuccess(bool)\n    }\n\n\n    return (\n        <StyledSectionBox component='section' id='seventh-section' py={4} >\n            <Container>\n                <Grid container spacing={{ xs: 2, sm:3, md: 10, lg: 22 }}>\n\n                    <Grid item xs={12} sm={7} md={7} lg={7}>\n                        <StyledDarkStack px={{ xs: 2, md: 3 }} pb={2} minHeight='392px' direction='column'>\n                            <StyledLogoImg src=\"https://arielbehar-portfolio.s3.eu-central-1.amazonaws.com/logo/logo.png\" alt=\"logo\" />\n\n                            <Typography variant='h4' component='h5' color='text.secondary' textAlign='center' my={3}>CONTACT ME</Typography>\n\n                            {\n                                !formSubmitSuccess\n                                    ? <>\n                                        <Typography variant='body1' component='p' color='text.secondary' textAlign='justify'>Need a web site/app done or just saying \"HI\"? Leave your input below and you'll get a response from me within the next 24 hours</Typography>\n                                        <ContactForm formSubmitSuccessHandler={formSubmitSuccessHandler} />\n                                    </>\n                                    : <Stack direction='column' justifyContent='center' alignItems='center' pt={4} spacing={2}>\n                                        <Typography variant='h3' component='p' textAlign='center' color='white'>Thank you!</Typography>\n                                        <Typography variant='h5' component='p' textAlign='center' color='success.light'>Your form has successfully been submitted!</Typography>\n                                    </Stack>\n                            }\n                        </StyledDarkStack>\n                    </Grid>\n\n                    <Grid item xs={12} sm={5} md={5} lg={5}>\n                        <StyledDarkStack px={{ xs: 4, sm: 1, md: 4 }} >\n                            <Typography variant='h4' component='h5' color='text.secondary' textAlign='center' my={3}>FIND ME ON</Typography>\n\n                            <Stack direction='row' justifyContent='space-evenly' mb={3} gap={1}>\n                                <Link textAlign='center'  href=\"https://www.linkedin.com/in/ariel-behar/\" target=\"_blank\" >\n                                    <Box height={{ xs: '80px', sm: '90px', md: '100px', lg: '110px' }} width='auto' component=\"img\" sx={{ objectFit: 'contain' }} src=\"https://arielbehar-portfolio.s3.eu-central-1.amazonaws.com/icons/linkedin.svg\" alt=\"LinkedIn Logo\" />\n                                </Link>\n                                <Link textAlign='center' href=\"https://github.com/ariel-behar\" target=\"_blank\">\n                                    <Box height={{ xs: '80px', sm: '90px', md: '100px', lg: '110px' }} width='auto' component=\"img\" sx={{ objectFit: 'contain' }} src=\"https://arielbehar-portfolio.s3.eu-central-1.amazonaws.com/icons/github.svg\" alt=\"Github Logo\" />\n                                </Link>\n                            </Stack>\n\n                            <Typography variant='h6' component='p' color='text.secondary' textAlign='center' mb={2}>OR EMAIL ME DIRECTLY AT</Typography>\n\n                            <Typography variant='h6' component='p' color='text.secondary' fontStyle='italic' textAlign='center' mb={3}>ariel.behar@hotmail.com</Typography>\n\n                        </StyledDarkStack>\n                    </Grid>\n                </Grid>\n            </Container>\n        </StyledSectionBox>\n    )\n}\n\nexport default ContactSection"],"names":["contactFormSchemaShape","name","yup","required","matches","min","max","email","subject","message","shape","StyledTextField","styled","TextField","theme","palette","text","secondary","muted","light","formSubmitSuccessHandler","useState","errorDuringProcessing","setErrorDuringProcessing","useForm","mode","resolver","yupResolver","contactFormSchema","defaultValues","register","handleSubmit","formState","errors","isDirty","isValid","onFormSubmit","data","e","preventDefault","formData","fetch","method","headers","body","JSON","stringify","formSubmissionResponse","json","success","Box","onSubmit","Stack","direction","spacing","justifyContent","alignItems","Person","fontSize","sx","color","marginRight","marginTop","autoComplete","fullWidth","variant","label","error","helperText","Mail","LocalOffer","Create","multiline","rows","Typography","component","textAlign","style","backgroundColor","borderRadius","Button","type","size","boxShadow","endIcon","Send","disabled","StyledSectionBox","StyledDarkStack","StyledLogoImg","loadSectionHandler","formSubmitSuccess","setFormSubmitSuccess","useEffect","id","py","Container","Grid","container","xs","sm","md","lg","item","px","pb","minHeight","src","alt","my","pt","bool","mb","gap","Link","href","target","height","width","objectFit","fontStyle"],"sourceRoot":""}